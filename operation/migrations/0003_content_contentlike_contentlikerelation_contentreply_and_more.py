# Generated by Django 4.0.4 on 2023-10-23 02:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('operation', '0002_block_follow_report_users_usertagpool'),
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('content_type', models.CharField(max_length=31)),
                ('content_id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('is_enabled', models.BooleanField()),
                ('last_modified_by', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField()),
                ('comment_cnt', models.IntegerField(blank=True, null=True)),
                ('like_cnt', models.IntegerField(blank=True, null=True)),
                ('up_cnt', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('mg_id', models.CharField(blank=True, max_length=255, null=True)),
                ('scan_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('visibility_condition', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'content',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentLike',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.CharField(max_length=255)),
                ('content_id', models.CharField(max_length=36)),
            ],
            options={
                'db_table': 'content_like',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentLikeRelation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'content_like_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentReply',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('is_enabled', models.BooleanField()),
                ('last_modified_by', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField()),
                ('like_cnt', models.IntegerField(blank=True, null=True)),
                ('nested_reply_cnt', models.IntegerField(blank=True, null=True)),
                ('text', models.CharField(max_length=255)),
                ('user_id', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'content_reply',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentReport',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField()),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('is_enabled', models.BooleanField()),
                ('last_modified_by', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'content_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTaggingUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_id', models.CharField(max_length=36)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'content_tagging_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentUp',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('content_id', models.CharField(max_length=36)),
            ],
            options={
                'db_table': 'content_up',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentUpRelation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'content_up_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('hashtag_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('text', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'hashtag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('is_enabled', models.BooleanField()),
                ('last_modified_by', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField()),
                ('like_cnt', models.IntegerField(blank=True, null=True)),
                ('up_cnt', models.IntegerField(blank=True, null=True)),
                ('mg_id', models.CharField(blank=True, max_length=255, null=True)),
                ('scan_id', models.CharField(blank=True, max_length=255, null=True)),
                ('scan_image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostContentRelation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'post_content_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostLikeRelation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'post_like_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostReport',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('is_enabled', models.BooleanField()),
                ('last_modified_by', models.CharField(blank=True, max_length=255, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField()),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'post_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostUpRelation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'post_up_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReplyLikeRelation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'reply_like_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpatialRefSys',
            fields=[
                ('srid', models.IntegerField(primary_key=True, serialize=False)),
                ('auth_name', models.CharField(blank=True, max_length=256, null=True)),
                ('auth_srid', models.IntegerField(blank=True, null=True)),
                ('srtext', models.CharField(blank=True, max_length=2048, null=True)),
                ('proj4text', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'spatial_ref_sys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Arbecon',
            fields=[
                ('resource_id', models.CharField(max_length=255)),
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='operation.content')),
            ],
            options={
                'db_table': 'arbecon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drawing',
            fields=[
                ('altitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('point', models.TextField(blank=True, null=True)),
                ('motion_speed', models.SmallIntegerField(blank=True, null=True)),
                ('motion_type', models.CharField(blank=True, max_length=255, null=True)),
                ('resource_url', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='operation.content')),
                ('gif_url', models.CharField(blank=True, max_length=255, null=True)),
                ('scan_image_url_for_arcut', models.CharField(blank=True, max_length=255, null=True)),
                ('template_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'drawing',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('altitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('point', models.TextField(blank=True, null=True)),
                ('media_list', models.JSONField(blank=True, null=True)),
                ('skin', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='operation.content')),
            ],
            options={
                'db_table': 'media',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContentHashtag',
            fields=[
                ('card', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='operation.media')),
            ],
            options={
                'db_table': 'content_hashtag',
                'managed': False,
            },
        ),
    ]
